
#ifndef DICEGAME_H
#define DICEGAME_H
#ifndef DICEINPUT_H
#define DICEINPUT_H

#include <stdio.h>


#define WON 1
#define LOST 0
#define TIE -1

/*****************************************************************************
Function Name: askYorN()
Purpose: print a message and let user input a 'Y' 'y' or 'N' 'n'
        otherwise repeat until input validly.
Function in parameters: const char msg[]
Function out parameter: int, 1 for 'Y' 'y' , 0 for 'N' 'n'
Version: 1
Author: Neeraj Kumar ,Ding Yi, Dutra Emilio
*****************************************************************************/
int askYorN(const char msg[]);

/*****************************************************************************
Function Name: askForBetting()
Purpose: ask user to input the betting money.
            argument "wallet" must be valid after calling this function.
            returns the betting money
Function in parameters: int wallet
Function out parameter: int
Version: 1
Author: Neeraj Kumar ,Ding Yi, Dutra Emilio
*****************************************************************************/
int askForBetting(int wallet);

/* struct Roll for saving a roll data */
struct Roll
{
    int dice1, dice2;
};

/*****************************************************************************
Function Name: rollDice()
Purpose: randomly generate a number between 1 - 6 and
        return the number generated by rand( )
Function in parameters: void
Function out parameter: int
Version: 1
Author: Neeraj Kumar ,Ding Yi, Dutra Emilio
*****************************************************************************/
int rollDice(void);

/*****************************************************************************
Function Name: addRoll()
Purpose: add a roll to the rolls, and increase the rollCount by two dice results
Function in parameters: struct Roll *rolls, int *pRollCount, int dice1, int dice2
Function out parameter: void
Version: 1
Author: Neeraj Kumar ,Ding Yi, Dutra Emilio
*****************************************************************************/
void addRoll(struct Roll *rolls, int *pRollCount, int dice1, int dice2);

/*****************************************************************************
Function Name: printRoll()
Purpose: print the rolls result
Function in parameters: struct Roll *rolls, int rollCount, int pm
Function out parameter: void
Version: 1
Author: Neeraj Kumar ,Ding Yi, Dutra Emilio
*****************************************************************************/
void printRoll(struct Roll *rolls, int rollCount, int pm);

/*****************************************************************************
Function Name: judgeRoll()
Purpose: judge a sum of two dices can make a won or lost.
            7,11 for won
            2,3,12 for lost
            other for not won nor lost
Function in parameters: int sum
Function out parameter: void
Version: 1
Author: Neeraj Kumar ,Ding Yi, Dutra Emilio
*****************************************************************************/
int judgeRoll(int sum);

/*****************************************************************************
Function Name: playGame()
Purpose:
    When the player is ready to play, (s)he would use the key ENTER to roll the dice
    If the user wins in his/her first roll, congratulate the player and return with WON
    If the user looses in his/her first roll, return with LOOSE and apologize
    Let the user keep playing until (s)he wins / loses, give an appropriate massage and finish
the game with the last roll value.
Function in parameters: void
Function out parameter: int
Version: 1
Author: Neeraj Kumar ,Ding Yi, Dutra Emilio
*****************************************************************************/
int playGame(void);

#endif
#endif